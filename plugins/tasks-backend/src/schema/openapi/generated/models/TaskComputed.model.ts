/*
 * Copyright 2025 The Backstage Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// ******************************************************************
// * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. *
// ******************************************************************

/**
 * Computed/derived properties for convenience
 * @public
 */
export interface TaskComputed {
  /**
   * Current status of the task (derived from taskState)
   */
  status: string;
  /**
   * Task execution cadence (derived from settings)
   */
  cadence: string;
  /**
   * Timestamp of the last task execution
   */
  lastRunEndedAt?: Date;
  /**
   * Timestamp of the next scheduled execution
   */
  nextRunAt?: Date;
  /**
   * Error message from the last failed execution
   */
  lastRunError?: string;
  /**
   * Current worker status (derived from workerState)
   */
  workerStatus?: TaskComputedWorkerStatusEnum;
  /**
   * When the currently running task will timeout
   */
  timesOutAt?: Date;
  /**
   * When the currently running task started
   */
  startedAt?: Date;
}

/**
 * @public
 */
export type TaskComputedWorkerStatusEnum = 'initial-wait' | 'idle' | 'running';
