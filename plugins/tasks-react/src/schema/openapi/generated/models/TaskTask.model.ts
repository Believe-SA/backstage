/*
 * Copyright 2025 The Backstage Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// ******************************************************************
// * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. *
// ******************************************************************
import { TaskSettings } from '../models/TaskSettings.model';
import { TaskTaskTaskState } from '../models/TaskTaskTaskState.model';
import { TaskTaskWorkerState } from '../models/TaskTaskWorkerState.model';

/**
 * Original task data from scheduler (lossless)
 * @public
 */
export interface TaskTask {
  /**
   * A unique (per plugin) ID for the task
   */
  taskId: string;
  /**
   * The plugin where the task is scheduled
   */
  pluginId: string;
  settings: TaskSettings;
  /**
   * Either local (runs on each worker node with potential overlaps) or global (runs on one worker node at a time, without overlaps)
   */
  scope: TaskTaskScopeEnum;
  taskState: TaskTaskTaskState | null;
  workerState: TaskTaskWorkerState | null;
}

/**
 * @public
 */
export type TaskTaskScopeEnum = 'global' | 'local';
